name: Versioned Release

on:
  push:
    branches:
      - main
  release:
    types: [published]

permissions:
  actions: write
  contents: write
  pull-requests: write

jobs:
  release_tag:
    name: Release version
    runs-on: ubuntu-24.04
    steps:
      - name: Generate token from GitHub App
        id: generate-token
        uses: tibdex/github-app-token@3beb63f4bd073e61482598c45c71c1019b59b73a # v2.1.0
        with:
          app_id: ${{ secrets.APP_PUSH_TAG_ID }}
          private_key: ${{ secrets.APP_PUSH_TAG_PRIVATE_KEY }}

      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          token: ${{ steps.generate-token.outputs.token }}
          fetch-tags: true
          fetch-depth: 0
          submodules: recursive

      - name: Checkout build (taskfiles) repo
        run: |
          git clone https://github.com/openkcm/build.git ./hack/common

      - name: Install Task
        uses: arduino/setup-task@b91d5d2c96a56797b48ac1e0e89220bf64044611 #v2.0.0
        with:
          version: 3.x
        env:
          GITHUB_TOKEN: ${{ env.GITHUB_TOKEN }}

      - name: Read and validate VERSION
        id: version
        run: |
          VERSION=$(task version)
          if [[ ! "$VERSION" =~ ^v[0-9]+\.[0-9]+\.[0-9]+(-dev(-[0-9a-f]*)?)?$ ]]; then
            echo "Invalid version format: $VERSION"
            exit 1
          fi
          echo "New version: $VERSION"
          echo "version=$VERSION" >> $GITHUB_ENV

      - name: Skip release if version is a dev version
        if: contains(env.version, '-dev')
        run: |
          echo "Skipping development version release: ${{ env.version }}"
          echo "SKIP=true" >> $GITHUB_ENV
          exit 0

      - name: Check if VERSION is already tagged
        id: check_tag
        run: |
          if git rev-parse "refs/tags/${{ env.version }}" >/dev/null 2>&1; then
            echo "Tag ${{ env.version }} already exists. Skipping release."
            echo "SKIP=true" >> $GITHUB_ENV
            exit 0
          fi
          echo "Tag ${{ env.version }} doesn't exists. Proceeding with release."

      - name: Determine Next Version
        id: set-next-version
        if: ${{ env.SKIP != 'true' }}
        run: |
          latest_version=${{ env.version }}
          echo "Latest tag: $latest_version"
        
          # Extract version components
          major=$(echo $latest_version | cut -d. -f1 | tr -d 'v')
          minor=$(echo $latest_version | cut -d. -f2)
          patch=$(echo $latest_version | cut -d. -f3)
        
          echo "Current version: $major.$minor.$patch"
          
          patch=$((patch + 1))
        
          next_version="v$major.$minor.$patch"
          echo "Next version: $next_version"
          
          echo "next_version=$next_version" >> $GITHUB_ENV

      - name: Create Git tag
        if: ${{ env.SKIP != 'true' }}
        run: |
          AUTHOR_NAME=$(git log -1 --pretty=format:'%an')
          AUTHOR_EMAIL=$(git log -1 --pretty=format:'%ae')
          echo "Tagging as $AUTHOR_NAME <$AUTHOR_EMAIL>"
          
          echo "AUTHOR_NAME=$AUTHOR_NAME" >> $GITHUB_ENV
          echo "AUTHOR_EMAIL=$AUTHOR_EMAIL" >> $GITHUB_ENV
          
          git config user.name "$AUTHOR_NAME"
          git config user.email "$AUTHOR_EMAIL"
          
          git tag -a "${{ env.version }}" -m "Release ${{ env.version }}"
          git push origin "${{ env.version }}"
        env:
          GITHUB_TOKEN: ${{ steps.generate-token.outputs.token }}

      - name: Build Changelog
        id: github_release
        uses: mikepenz/release-changelog-builder-action@5fb6e51e44d4aea73f66549f425aa3ed5008109e # v5
        with:
          mode: "PR"
          configurationJson: |
            {
              "template": "#{{CHANGELOG}}",
              "pr_template": "- #{{TITLE}}: ##{{NUMBER}}",
              "categories": [
                {
                    "title": "## Feature",
                    "labels": ["feat", "feature"]
                },
                {
                    "title": "## Fix",
                    "labels": ["fix", "bug"]
                },
                {
                    "title": "## Other",
                    "labels": []
                }
              ],
              "label_extractor": [
                {
                  "pattern": "^(build|chore|ci|docs|feat|fix|perf|refactor|revert|style|test){1}(\\([\\w\\-\\.]+\\))?(!)?: ([\\w ])+([\\s\\S]*)",
                  "on_property": "title",
                  "target": "$1"
                }
              ]
            }
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update to the next version
        if: ${{ env.SKIP != 'true' }}
        run: |
          task release:update-repo-version --verbose -- "${{ env.next_version }}-dev"

      - name: Generate SBOM
        if: ${{ env.SKIP != 'true' }}
        run: |
          task cyclonedxgomod:mod-library --verbose

      - name: Create GitHub release
        if: ${{ env.SKIP != 'true' }}
        uses: softprops/action-gh-release@da05d552573ad5aba039eaac05058a918a7bf631 # v2.2.2
        with:
          tag_name: ${{ env.version }}
          name: Release ${{ env.version }}
          body: ${{steps.github_release.outputs.changelog}}
          files: "sbom.json"
          draft: true
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Clean up SBOM files
        if: ${{ env.SKIP != 'true' }}
        run: |
          rm -f sbom.json
          rm -rf hack

      - name: Create pr for next version
        if: ${{ env.SKIP != 'true' }}
        id: cpr
        uses: peter-evans/create-pull-request@271a8d0340265f705b14b6d32b9829c1cb33d45e # v7.0.8
        with:
          token: ${{ steps.generate-token.outputs.token }}
          commit-message: "chore: update to ${{ env.next_version }}-dev version"
          committer: "GitHub Actions <github-actions[bot]@users.noreply.github.com>"
          author: "${{ env.AUTHOR_NAME }} <${{ env.AUTHOR_EMAIL }}>"
          signoff: true
          base: main
          branch: dev/${{ env.next_version }}
          delete-branch: true
          title: "chore: update to ${{ env.next_version }}-dev version"
          body: "This PR was created automatically by GitHub Actions."
          labels: |
            next-dev-version
            automated pr
          draft: false
